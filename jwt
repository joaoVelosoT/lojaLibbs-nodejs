JWT -> Padrão de codificacao em base m4 de tokens, para aumentar a segurança da api, quando o user fazer login na aplicação, ira retornar um token, esse token tera que ser enviado toda vez que o user fazer uma requisiçao em alguma rota "privada"
a
1 - instalar extensão -> "npm i jsonwebtoken"
2 - criar variavel no codigo -> const jwt = require('jsonwebtoken')
3 - enviar token -> depois da validação de login, o usuario ira receber o token, função para receber o token -> const token = jwt.sign({userId}, {CHAVESECRETA}, { expiresIn: 300})
exemplo -> if(userLogado){res.status(200).json({ auth: true, msg : "userLogado", token : "123"})}
4 - validacao do token -> para validar o token e preciso criar uma funcao -> 
function verifyJWT(req, res, next){

    const token = req.headers['x-access-token'];
    jwt.verify(token, CHAVESECRETA, (err, decoded) => {
        if(err) return res.status(401).end();

        req.userId = decoded.userId;
        next()
    })
}
